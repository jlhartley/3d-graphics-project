#version 150

// Can only use the layout(location = index) in newer versions of OpenGL
in vec2 position;
in vec3 colour;

out vec3 pass_colour;

uniform mat4 transformationMatrix;
uniform float time;

const float PI = 3.14159;

void main()
{

	vec4 transformedPosition = vec4(position, 0.0, 1.0) * transformationMatrix;

	//vec3 timeBasedColour = vec3(sin(time), cos(time), -sin(time*20));
	vec3 timeBasedColour = vec3(sin(PI/2+time*10), sin(3*PI/2+time*10), sin(PI+time*10)); // http://www.wolframalpha.com/input/?i=y%3Dsin%28pi%2F2%2Bx%29%2C+y%3Dsin%28pi%2Bx%29%2C+y%3Dsin%283pi%2F2%2Bx%29
	vec3 positionBasedColour = vec3(abs(transformedPosition.x), abs(transformedPosition.y), 0.2);

    //pass_colour = mix(colour, timeBasedColour, sin(time)/2-0.5);
    
    //pass_colour = positionBasedColour;
    
    pass_colour = colour;
    
    gl_Position = vec4(position, 0.0, 1.0) * transformationMatrix;
}